workflows:
  version: 2
  build-deploy:
    jobs:
      - unit-test
      - publish-docker:
          requires:
            - unit-test
#      - deploy-on-k8s:
#          requires:
#            - publish-docker
          filters:
            branches:
              only: master

#version: 2
# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2
#  # Orb Dependencies
#  orbs:
#    gcloud: circleci/gcp-cli@1.0.6
#    gcr: circleci/gcp-gcr@0.0.2
#    k8s: circleci/kubernetes@0.1.0
#  commands:
#    install:
#      description: "Install `gcloud` and `kubectl` if not already installed."
#      steps:
#        - gcloud/install
#        - k8s/install
orbs:
  gcloud: circleci/gcp-cli@1.0.6
  gcr: circleci/gcp-gcr@0.0.2
  k8s: circleci/kubernetes@0.1.0

jobs:
  unit-test:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - currency-{{ checksum "pom.xml" }}
            - currency
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: currency-{{ checksum "pom.xml" }}
      - run:
          name: Build and unit test
          command: |
            mvn test

  publish-docker:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    working_directory: ~/repo

#    commands:
#      install:
#        description: "Install `gcloud` and `kubectl` if not already installed."
#        steps:
#          - gcloud/install
#          - k8s/install
    steps:
      - run:
          - name: install gcloud
          - command: gcloud/install
      - run:
          - name: install k8s
          - command: k8s/install
      - checkout
      - restore_cache:
          keys:
            - currency-{{ checksum "pom.xml" }}
            - currency
      - run:
          name: Login to docker repo
          command: docker login -u _json_key -p "$GOOGLE_AUTH" https://gcr.io
      - run:
          name: Build image
          command: |
            mvn compile jib:build -DskipTests=true \
              -Dbuild.number=${CIRCLE_BUILD_NUM}
      - run:
          name: Deploy on Kubernetes
          command: |
            gcloud container clusters get-credentials currency-cicd --zone europe-north1-a --project fiery-iridium-235312
            kubectl --record deployment.apps/currency-deployment --namespace currency-test set image deployment.v1.apps/currency-deployment currency-deployment=gcr.io/fiery-iridium-235312/test/currency:${CIRCLE_BUILD_NUM}
            timeout 120 kubectl rollout status deployment.v1.apps/currency-deployment --namespace currency-test || kubectl rollout undo deployment.v1.apps/currency-deployment --namespace currency-test | exit 1"
